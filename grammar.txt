import sys # 处理标准输入输出
sys.stdin.readlines() # 读取全部标准输入，结果为按行分割的数组
array.split() # 将字符串按照字符分割为数组，默认为空额
str(arg) # 将数字转换为字符串
len(arg) # 数组或字符串的长度
sys.stdin.write(arg) # 向标准输出写入，必须是字符串
arg.strip() # 去除字符串两侧的空格，包括换行符
[func(elem) for elem in list if cond] # 列表解析，对列表中每个元素进行处理
{a:b for a in list} # 字典推导式
{a for a in list} # 集合推导式
[func(key,value) for key,value in dict.items() if cond] # 字典解析，对字典中每个元素进行处理
for i in range(start, end, step) # start~end-1遍历i，步长step
arg.lower() # 字符串转小写
arg.upper() # 字符串转大写
arg.captalize() # 首字母大写
arg.title() # 每个单词首字母大写
arg.swapcase() # 大小写交换
int(arg, mode) # 将字符串arg转换为整数，输入的进制为mode
float(arg) # 将字符串转换为浮点数
set(arg) # 生成一个新集合，arg为空为空集，为列表时生成集合并自动去重，输入为字符串时会分割为单个字符并去重
list(arg) # 将集合转换为列表，输入为字符串时会分割为单个字符
sys.stdin.readline() # 读取一行标准输入
set.add(arg) # 向一个集合实例set中添加一个元素arg
spliter.join(list) # 用spliter字符将list列表的每个元素连接起来成为字符串
min(...args) # 取args的最小值，args可以是一系列参数也可以是数组
list[start: end:step] # 取list列表或字符串start和end之间的切片，包含start不包含end，步长为step，负数代表从倒数第N个元素算起
str * num # 字符str重复Num次
list.append(arg) # 列表list添加元素arg
a % b # 取余
a // b # 除法向下取整
round(arg) # 四舍五入，注意刚好是0.5的话执行向偶数取整
math.sqrt(arg) # 开平方，需要引入sqrt库
arg not in dict # 判断arg是否不在字典dict的键中或是否在list的值中或是否是str的子串
dict.keys() # 获取字典的键并转换为列表
dict.values() # 获取字典的值并转换为列表
for item in collection # 遍历数组每个元素或者字典的键
a and b # 且条件
a or b # 或条件
try: -- except: # 捕获错误语句
switch: # python没有这个语句，用elif判断
[arg]*n # 生成一个数组，里面有n个arg元素，如果arg是引用，则生成的数组里面每个arg都指向同一个原始对象
bin(arg) # 将arg转换为二进制字符串，以0b开头
hex(arg) # 将整数arg转换为十六进制字符串，以0x开头
char.isupper() # 判断字符是否是大写字母
char.islower() # 判断字符是否是小写字母
char.isalpha() # 判断字符是否是字母
char.isdigit() # 判断字符是否是数字
ord(char) # 将字符转换为ascii码
chr(num) # 将ascii码转换为字符
[...listargs1] + [...listargs2] # 拼接两个数组list1和list2
sorted(list, key， reverse) # 排序list,按照key的规则来排序，key可以是lambda表达式，如lambda x: (key1, key2)。多条件用元组先后包裹起来即可，reverse默认为True，可以对字符串排序，返回字符数组，默认按照ascii码排序
filter(lambda, list) # 对list进行筛选，筛选条件为lambda表达式，结果可以用list函数转换为列表
map(lambda, list) # 对list进行批量修改，处理方式为lambda表达式，结果可以用list函数转换为列表
a if cond else b # 三元判断符，判断cond 为真取值a否则取值b
list.insert(pos, elem) # 将elem插入到list的pos位置元素前面
list.remove(elem) # 将第一个出现的elem从list中删除
sum(list) # 对list求和，不可以是一系列参数
a ** b # 幂运算
string.find(substr, start) # 从start开始求子串substr第一次出现在string中的索引，没找到则返回-1
gloabal a # 函数内部修改外部定义的变量，需要在函数开头用global声明这个变量
list.count(arg) # 计算列表或字符串中的arg元素或字串数目
list.index(item, pos) # 从pos位置开始在list中查找元素item，或从字符串中查找子串，没找到会报错
f"number:.nf" # 将number调整为n位小数
func(*arg, **kwarg) # 将没有键的参数放到arg元组里面，将有键的参数放到kwarg对象里面