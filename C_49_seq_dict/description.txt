有一种特殊的加密算法，明文为一段数字串，经过密码本查找转换，生成另一段密文数字串。规则如下

1.明文为一段数字串由0-9组成
2.密码本为数字0-9组成的二维数组

3.需要按明文串的数字顺序在密码本里找到同样的数字串，密码本里的数字串是由相邻的单元格数字组成，上下和左右是相邻的，注意:对角线不相邻，同一个单元格的数字不能重复使用。
4.每一位明文对应密文即为密码本中找到的单元格所在的行和列序号(序号从0开始)组成的两个数字。如明文第位Data[i]对应密码本单元格为Book[x][y]，则明文第i位对应的密文为XY，X和Y之间用空格隔开
如果有多条密文，返回字符序最小的密文。如果密码本无法匹配，返回"error"

请你设计这个加密程序


示例1:
密码本
[0 0 2]
[1 3 4]
[6 6 4]
明文:3,密文.“1 1”

示例2:
密码本:
0 0 2
1 3 4
6 6 4
明文:“0 3”密文.“0 1 1 1”


输入描述
第一行输入1个正整数N,代表明文的长度(1 <= N <= 200)

第二行输入N个明文数字组成的序列Data[i] (整数: 0<= Data[i] <= 9)

第三行1个正整数M,代表密文的长度接下来M行，每行M个数，代表密文矩阵
输出描述
输出字典序最小密文.如果无法匹配，输出"error

示例1：

输入：

2
0 3
3
0 0 2
1 3 4
6 6 4 
输出：

0 1 1 1

示例2：

输入：

2
0 5
3
0 0 2
1 3 4
6 6 4

输出：

error